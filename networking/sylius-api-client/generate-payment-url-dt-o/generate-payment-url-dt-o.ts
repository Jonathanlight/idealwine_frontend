/**
 * Generated by orval v6.19.0 üç∫
 * Do not edit manually.
 */
import { useQuery } from "@tanstack/react-query";
import type {
  QueryFunction,
  QueryKey,
  UseQueryOptions,
  UseQueryResult,
} from "@tanstack/react-query";
import { customInstance } from "../../mutator/custom-client-instance";

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

/**
 * @summary Retrieves a GeneratePaymentUrlDTO resource.
 */
export const getGeneratePaymentUrlDTOItem = (
  id: string,
  options?: SecondParameter<typeof customInstance>,
  signal?: AbortSignal,
) => {
  return customInstance<void>(
    { url: `/api/v2/generate-payment-url-d-t-os/${id}`, method: "get", signal },
    options,
  );
};

export const getGetGeneratePaymentUrlDTOItemQueryKey = (id: string) => {
  return [`/api/v2/generate-payment-url-d-t-os/${id}`] as const;
};

export const getGetGeneratePaymentUrlDTOItemQueryOptions = <
  TData = Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>,
  TError = unknown,
>(
  id: string,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>,
      TError,
      TData
    >;
    request?: SecondParameter<typeof customInstance>;
  },
) => {
  const { query: queryOptions, request: requestOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetGeneratePaymentUrlDTOItemQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>> = ({
    signal,
  }) => getGeneratePaymentUrlDTOItem(id, requestOptions, signal);

  return { queryKey, queryFn, enabled: !!id, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetGeneratePaymentUrlDTOItemQueryResult = NonNullable<
  Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>
>;
export type GetGeneratePaymentUrlDTOItemQueryError = unknown;

/**
 * @summary Retrieves a GeneratePaymentUrlDTO resource.
 */
export const useGetGeneratePaymentUrlDTOItem = <
  TData = Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>,
  TError = unknown,
>(
  id: string,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getGeneratePaymentUrlDTOItem>>,
      TError,
      TData
    >;
    request?: SecondParameter<typeof customInstance>;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetGeneratePaymentUrlDTOItemQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & { queryKey: QueryKey };

  query.queryKey = queryOptions.queryKey;

  return query;
};
